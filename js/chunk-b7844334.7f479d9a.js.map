{"version":3,"sources":["webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VDivider/VDivider.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VChip/VChip.ts"],"names":["name","functional","directives","ripple","props","disabled","type","default","value","indeterminate","indeterminateIcon","onIcon","offIcon","render","children","listeners","h","staticClass","center","icon","VIcon","dark","light","classes","mergeData","data","class","on","click","e","f","inset","vertical","Boolean","this","$attrs","role","orientation","themeClasses","attrs","$listeners","mixins","$slots","action","dense","hideSelected","items","itemDisabled","String","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","computed","parsedItems","map","item","tileActiveClass","Object","setTextColor","staticNoDataTile","tile","undefined","mousedown","$createElement","VListItem","genTileContent","methods","genAction","VListItemAction","color","inputValue","input","genDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","index","genTile","hasItem","getDisabled","id","_uid","activeClass","$scopedSlots","length","parent","scopedSlot","needsTile","innerHTML","getText","VList","domProps","indexOf","getValue","slot","itemsLength","tabindex","valueComparator","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","ClickOutside","appendIcon","attach","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","computedCounterValue","isFocused","handler","closeConditional","include","dynamicHeight","hasChips","hasSlot","isDirty","listData","scopeId","$vnode","context","$vuetify","lang","t","select","selectItem","scopedSlots","staticList","console","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","watch","internalValue","window","immediate","blur","activateMenu","clearableCallback","getContent","contains","$el","uniqueValues","arr","val","findExistingIndex","i","$refs","menu","genChipSelection","isDisabled","VChip","close","small","key","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genIcon","VInput","genInput","readonly","autocomplete","keypress","onKeyPress","genHiddenInput","attrs$","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","scroll","onScroll","ref","genSelections","genSelection","genSlotSelection","selection","selected","isInteractive","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","isAppendInner","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","Math","setTimeout","onKeyDown","isReadonly","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","setMenuIndex","setSelectedItems","values","v","oldValue","appendInner","active","chipGroup","closeIcon","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","created","breakingProps","original","replacement","genFilter","left","genClose","right","size","genContent","setBackgroundColor"],"mappings":"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","file":"js/chunk-b7844334.7f479d9a.js","sourcesContent":["import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: classes,\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), children)\n  },\n})\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        !this.isInteractive ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        !this.isInteractive ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n        keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n        menu.activeTile && menu.activeTile.click()\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n"],"sourceRoot":""}